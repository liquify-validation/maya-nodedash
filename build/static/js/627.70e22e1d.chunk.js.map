{"version":3,"file":"static/js/627.70e22e1d.chunk.js","mappings":"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","sources":["containers/A_monitor/standbypage.js"],"sourcesContent":["import React, { Component, useState } from \"react\";\r\nimport Modals from \"@iso/components/Feedback/Modal\";\r\nimport Popover from \"@iso/components/uielements/popover\";\r\nimport { getData, setCookie, getCookie } from \"CommonFunctions\";\r\nimport { ModalContent } from \"../Feedback/Modal/Modal.styles\";\r\nimport { Layout, Button, Input, Breadcrumb, Select } from \"antd\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport CustomLineChart from \"./CustomLineChart\";\r\nimport CustomScatterChart from \"./CustomScatterChart\";\r\nimport \"./styles.css\";\r\nimport {\r\n  SearchOutlined,\r\n  LeftOutlined,\r\n  RightOutlined,\r\n  HistoryOutlined,\r\n  DotChartOutlined,\r\n} from \"@ant-design/icons\";\r\nimport heartBlank from \"@iso/assets/images/heart-blank.png\";\r\nimport heartFull from \"@iso/assets/images/heart-full.png\";\r\nimport imageDO from \"@iso/assets/images/do.png\";\r\nimport imageAWS from \"@iso/assets/images/aws.png\";\r\nimport imageGCP from \"@iso/assets/images/gcp.png\";\r\nimport imageAZURE from \"@iso/assets/images/azure.png\";\r\nimport imageHETZNER from \"@iso/assets/images/hetzner.png\";\r\nimport imageVULTR from \"@iso/assets/images/vultr.png\";\r\nimport imageLeaseweb from \"@iso/assets/images/leaseweb.png\";\r\nimport imageDatacamp from \"@iso/assets/images/datacamp.png\";\r\nimport imageComcast from \"@iso/assets/images/comcast.png\";\r\nimport imageChoopa from \"@iso/assets/images/choopa.png\";\r\nimport imageChartercoms from \"@iso/assets/images/chartercoms.png\";\r\nimport imageATandT from \"@iso/assets/images/atandt.png\";\r\nimport imageZenlayer from \"@iso/assets/images/zenlayer.png\";\r\nimport imageAljeel from \"@iso/assets/images/Aljeel.png\";\r\nimport imageHostinger from \"@iso/assets/images/Hostinger.png\";\r\n\r\nimport binance from \"@iso/assets/images/binance.png\";\r\nimport eth from \"@iso/assets/images/eth.png\";\r\nimport bitcoin from \"@iso/assets/images/bitcoin.png\";\r\nimport litecoin from \"@iso/assets/images/litecoin.png\";\r\nimport bitcoincash from \"@iso/assets/images/bitcoincash.png\";\r\nimport dogecoin from \"@iso/assets/images/dogecoin.png\";\r\nimport gaia from \"@iso/assets/images/atom.png\";\r\nimport thornode from \"@iso/assets/images/thornode.svg\";\r\nimport avax from \"@iso/assets/images/avax.png\";\r\nimport blockIcon from \"@iso/assets/images/overview/block_icon.svg\";\r\nimport highTradingIcon from \"@iso/assets/images/overview/24high_trading.svg\";\r\nimport lowTradingIcon from \"@iso/assets/images/overview/24low_trading.svg\";\r\nimport bondIcon from \"@iso/assets/images/overview/Bond_icon.svg\";\r\nimport churnsIcon from \"@iso/assets/images/overview/churns_icon.svg\";\r\nimport marcketCapIcon from \"@iso/assets/images/overview/marcket_Cap.svg\";\r\nimport mcapRankIcon from \"@iso/assets/images/overview/mcap_rank.svg\";\r\nimport runeUsdtIcon from \"@iso/assets/images/overview/rune_usdt.svg\";\r\nimport timeIcon from \"@iso/assets/images/overview/time_icon.svg\";\r\nimport totalSupplyIcon from \"@iso/assets/images/overview/total_supply.svg\";\r\nimport loadingIcon from \"@iso/assets/images/overview/loading.png\";\r\nimport githubIcon from \"@iso/assets/images/overview/github_link_icon.svg\";\r\nimport twitterIcon from \"@iso/assets/images/overview/twitter_link_icon.svg\";\r\nimport liquifyLogo from \"@iso/assets/images/overview/liquify_logo.svg\";\r\nimport threeDotsIcon from \"@iso/assets/images/overview/dots_three_circle.svg\";\r\nimport powerIcon from \"@iso/assets/images/overview/power.svg\";\r\nimport chartLineIcon from \"@iso/assets/images/overview/chartLineIcon.svg\";\r\nimport activeIcon from \"@iso/assets/images/overview/active_icon.svg\";\r\nimport VisibleColumn from \"@iso/components/VisibleColumn/VisibleColumn\";\r\nimport arrowDownIcon from \"@iso/assets/images/overview/arrow-down.svg\";\r\nimport verticalTopIcon from \"@iso/assets/images/overview/vertical-align-top.svg\";\r\n\r\nconst leaveIcon = (\r\n  <svg\r\n    style={{ marginTop: 5 }}\r\n    focusable=\"false\"\r\n    preserveAspectRatio=\"xMidYMid meet\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    fill=\"currentColor\"\r\n    width=\"20\"\r\n    height=\"20\"\r\n    viewBox=\"0 0 30 30\"\r\n    aria-hidden=\"true\"\r\n    className=\"sfg\"\r\n  >\r\n    <path d=\"M6,30H18a2.0023,2.0023,0,0,0,2-2V25H18v3H6V4H18V7h2V4a2.0023,2.0023,0,0,0-2-2H6A2.0023,2.0023,0,0,0,4,4V28A2.0023,2.0023,0,0,0,6,30Z\"></path>\r\n    <path d=\"M20.586 20.586L24.172 17 10 17 10 15 24.172 15 20.586 11.414 22 10 28 16 22 22 20.586 20.586z\"></path>\r\n  </svg>\r\n);\r\n\r\nconst { Header, Footer, Content } = Layout;\r\n\r\nconst headerStyle = {\r\n  cursor: \"pointer\",\r\n  padding: \"12px 15px\",\r\n  fontSize: 15,\r\n  color: \"#ffffff\",\r\n  backgroundColor: \"rgba(24, 34, 51, 0.4)\",\r\n  height: 55,\r\n  fontWeight: 600,\r\n};\r\nconst tdStyle = {\r\n  minWidth: 60,\r\n  textAlign: \"right\",\r\n  fontSize: 14,\r\n  padding: \"10px 15px\",\r\n};\r\nconst trStyle = { height: 45 };\r\nconst iconStyle = {\r\n  minWidth: 25,\r\n  padding: 5,\r\n  paddingLeft: 10,\r\n  paddingRight: 10,\r\n  padding: \"10px 15px\",\r\n};\r\n\r\nasync function copyToClipWithPopup(msg, ip) {\r\n  copyToClipboard(ip);\r\n  popUpModal(msg, ip);\r\n}\r\n\r\nconst copyToClipboard = (str) => {\r\n  if (navigator && navigator.clipboard && navigator.clipboard.writeText)\r\n    return navigator.clipboard.writeText(str);\r\n  return Promise.reject(\"The Clipboard API is not available.\");\r\n};\r\n\r\nfunction popUpModal(msg, ip) {\r\n  Modals.info({\r\n    title: <h3>Success</h3>,\r\n    content: (\r\n      <ModalContent>\r\n        <p>\r\n          <strong>{`${msg} `}</strong> {`${ip}`}\r\n        </p>\r\n      </ModalContent>\r\n    ),\r\n    onOk() {},\r\n    okText: \"OK\",\r\n    cancelText: \"Cancel\",\r\n    className: \"feedback-modal\",\r\n  });\r\n}\r\n\r\nconst SortIcon = ({ sortBy, column, sortDirection }) => {\r\n  if (sortBy == column) {\r\n    return (\r\n      <img\r\n        className={`sort-icon ${sortDirection}`}\r\n        src={arrowDownIcon}\r\n        width={12}\r\n      />\r\n    );\r\n  }\r\n  return null;\r\n};\r\n\r\nconst Icons = ({ address, ip_address, addToFav, whichHeart }) => {\r\n  const firstURL = `https://thornode.ninerealms.com/thorchain/node/${address}`;\r\n  const secondURL = `https://viewblock.io/thorchain/address/${address}`;\r\n  return (\r\n    <span style={{ height: 20, marginLeft: 5 }} className=\"icons-wrapper\">\r\n      <Popover content={\"Explore Node\"} trigger=\"hover\">\r\n        <a\r\n          href={secondURL}\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n          style={{ marginLeft: 5 }}\r\n        >\r\n          <svg\r\n            focusable=\"false\"\r\n            preserveAspectRatio=\"xMidYMid meet\"\r\n            style={{ verticalAlign: \"middle\" }}\r\n            width=\"14\"\r\n            height=\"14\"\r\n            viewBox=\"0 0 14 14\"\r\n            fill=\"none\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n          >\r\n            <path\r\n              d=\"M8.21201 6.12094C7.93815 5.79037 7.59622 5.52244 7.20939 5.33531C6.82257 5.14818 6.3999 5.04623 5.97006 5.03638C5.54022 5.02653 5.11326 5.10902 4.71815 5.27823C4.32303 5.44745 3.969 5.69944 3.68006 6.01712L1.96996 7.89664C1.45171 8.48651 1.18641 9.25576 1.23118 10.0387C1.27595 10.8217 1.62723 11.5557 2.20934 12.0827C2.79146 12.6097 3.55784 12.8875 4.34342 12.8562C5.12901 12.825 5.87094 12.4872 6.40942 11.9157L7.38417 10.8444\"\r\n              stroke=\"currentColor\"\r\n              stroke-width=\"1.2\"\r\n              stroke-linecap=\"round\"\r\n              stroke-linejoin=\"round\"\r\n            />\r\n            <path\r\n              d=\"M5.39864 7.52442C5.63159 7.8849 5.93954 8.19119 6.3016 8.42251C6.66366 8.65384 7.07135 8.80479 7.49704 8.86513C7.92272 8.92546 8.35644 8.89377 8.76876 8.77221C9.18109 8.65064 9.56238 8.44204 9.88678 8.16056L11.8067 6.49526C12.3909 5.97045 12.7451 5.23775 12.793 4.45497C12.8409 3.67219 12.5787 2.90196 12.0628 2.31017C11.5469 1.71838 10.8186 1.35238 10.0348 1.291C9.25103 1.22962 8.47442 1.47778 7.87227 1.98201L6.77194 2.93082\"\r\n              stroke=\"currentColor\"\r\n              stroke-width=\"1.2\"\r\n              stroke-linecap=\"round\"\r\n              stroke-linejoin=\"round\"\r\n            />\r\n          </svg>\r\n        </a>\r\n      </Popover>\r\n      <Popover content={\"Thornode API\"} trigger=\"hover\">\r\n        <a\r\n          href={firstURL}\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n          style={{ marginLeft: 5 }}\r\n        >\r\n          <svg\r\n            focusable=\"false\"\r\n            preserveAspectRatio=\"xMidYMid meet\"\r\n            style={{ verticalAlign: \"middle\" }}\r\n            width=\"13\"\r\n            height=\"13\"\r\n            viewBox=\"0 0 13 13\"\r\n            fill=\"none\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n          >\r\n            <path\r\n              d=\"M10.0209 5.95871L9.20835 6.77121L6.22919 3.79204L7.04169 2.97954C7.44794 2.57327 8.93752 1.8962 10.0209 2.97954C11.1042 4.06288 10.4271 5.55243 10.0209 5.95871Z\"\r\n              stroke=\"currentColor\"\r\n              stroke-width=\"1.2\"\r\n              stroke-linecap=\"round\"\r\n              stroke-linejoin=\"round\"\r\n            />\r\n            <path\r\n              d=\"M11.375 1.625L10.0208 2.97917\"\r\n              stroke=\"currentColor\"\r\n              stroke-width=\"1.2\"\r\n              stroke-linecap=\"round\"\r\n              stroke-linejoin=\"round\"\r\n            />\r\n            <path\r\n              d=\"M2.97917 7.04199L3.79167 6.22949L6.77083 9.20866L5.95833 10.0212C5.55208 10.4274 4.0625 11.1045 2.97917 10.0212C1.89583 8.93783 2.57292 7.44827 2.97917 7.04199Z\"\r\n              stroke=\"currentColor\"\r\n              stroke-width=\"1.2\"\r\n              stroke-linecap=\"round\"\r\n              stroke-linejoin=\"round\"\r\n            />\r\n            <path\r\n              d=\"M6.22919 8.66634L7.31252 7.58301\"\r\n              stroke=\"currentColor\"\r\n              stroke-width=\"1.2\"\r\n              stroke-linecap=\"round\"\r\n              stroke-linejoin=\"round\"\r\n            />\r\n            <path\r\n              d=\"M1.625 11.3747L2.97917 10.0205\"\r\n              stroke=\"currentColor\"\r\n              stroke-width=\"1.2\"\r\n              stroke-linecap=\"round\"\r\n              stroke-linejoin=\"round\"\r\n            />\r\n            <path\r\n              d=\"M4.33331 6.77083L5.41665 5.6875\"\r\n              stroke=\"currentColor\"\r\n              stroke-width=\"1.2\"\r\n              stroke-linecap=\"round\"\r\n              stroke-linejoin=\"round\"\r\n            />\r\n          </svg>\r\n        </a>\r\n      </Popover>\r\n      <Popover content={ip_address} title={\"IP Address\"} trigger=\"hover\">\r\n        <span\r\n          style={{ cursor: \"pointer\", marginLeft: 5 }}\r\n          onClick={() =>\r\n            copyToClipWithPopup(\"IP Copied to clipboard:\", ip_address)\r\n          }\r\n        >\r\n          <svg\r\n            focusable=\"false\"\r\n            preserveAspectRatio=\"xMidYMid meet\"\r\n            style={{ verticalAlign: \"middle\" }}\r\n            width=\"13\"\r\n            height=\"13\"\r\n            viewBox=\"0 0 13 13\"\r\n            fill=\"none\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n          >\r\n            <path\r\n              d=\"M10.2916 1.08301H5.95831C5.81465 1.08301 5.67688 1.14008 5.5753 1.24166C5.47371 1.34324 5.41665 1.48102 5.41665 1.62467C5.41665 1.76833 5.47371 1.90611 5.5753 2.00769C5.67688 2.10927 5.81465 2.16634 5.95831 2.16634H10.2916C10.4353 2.16634 10.5731 2.22341 10.6747 2.32499C10.7762 2.42657 10.8333 2.56435 10.8333 2.70801V6.49967H1.62498C1.48132 6.49967 1.34355 6.55674 1.24196 6.65833C1.14038 6.75991 1.08331 6.89768 1.08331 7.04134V8.12467C1.08331 8.55565 1.25452 8.96898 1.55926 9.27372C1.86401 9.57847 2.27734 9.74967 2.70831 9.74967H4.33331V10.833H2.70831C2.56465 10.833 2.42688 10.8901 2.3253 10.9917C2.22371 11.0932 2.16665 11.231 2.16665 11.3747C2.16665 11.5183 2.22371 11.6561 2.3253 11.7577C2.42688 11.8593 2.56465 11.9163 2.70831 11.9163H10.2916C10.4353 11.9163 10.5731 11.8593 10.6747 11.7577C10.7762 11.6561 10.8333 11.5183 10.8333 11.3747C10.8333 11.231 10.7762 11.0932 10.6747 10.9917C10.5731 10.8901 10.4353 10.833 10.2916 10.833H8.66665V9.74967H10.2916C10.7226 9.74967 11.1359 9.57847 11.4407 9.27372C11.7454 8.96898 11.9166 8.55565 11.9166 8.12467V2.70801C11.9166 2.27703 11.7454 1.86371 11.4407 1.55896C11.1359 1.25421 10.7226 1.08301 10.2916 1.08301ZM7.58331 10.833H5.41665V9.74967H7.58331V10.833ZM10.8333 8.12467C10.8333 8.26833 10.7762 8.40611 10.6747 8.50769C10.5731 8.60927 10.4353 8.66634 10.2916 8.66634H2.70831C2.56465 8.66634 2.42688 8.60927 2.3253 8.50769C2.22371 8.40611 2.16665 8.26833 2.16665 8.12467V7.58301H10.8333V8.12467Z\"\r\n              fill=\"currentColor\"\r\n            />\r\n            <path\r\n              d=\"M3.9044 3.30042L2.78573 4.75234L1.66706 3.30042C1.36512 2.90853 1.36759 2.45798 1.57491 2.09161C1.78501 1.72031 2.21379 1.42871 2.78573 1.42871C3.35767 1.42871 3.78646 1.72031 3.99656 2.09161C4.20388 2.45798 4.20634 2.90853 3.9044 3.30042Z\"\r\n              stroke=\"currentColor\"\r\n            />\r\n            <path\r\n              d=\"M1.85712 5.57129H3.71426\"\r\n              stroke=\"currentColor\"\r\n              stroke-linecap=\"round\"\r\n            />\r\n          </svg>\r\n        </span>\r\n      </Popover>\r\n      <img\r\n        alt=\"#\"\r\n        onClick={() => addToFav(address)}\r\n        src={whichHeart(address)}\r\n        style={{\r\n          cursor: \"pointer\",\r\n          marginLeft: 5,\r\n          marginTop: 2,\r\n          width: 15,\r\n          height: 15,\r\n        }}\r\n      />\r\n    </span>\r\n  );\r\n};\r\n\r\nconst GlobalData = ({\r\n  globalData,\r\n  animateBlockCount,\r\n  state,\r\n  chartData,\r\n  handleClickTotalBond,\r\n  chartDataConfig,\r\n  totalBondOptions,\r\n  handlePopoverVisibility,\r\n  handleMaxEffectiveStake,\r\n  maxStakeOptions,\r\n}) => {\r\n  let timeToDisplay = \"\";\r\n  let msgTitle = \"\";\r\n  if (globalData?.churnTry && globalData?.retiring === \"false\") {\r\n    msgTitle = \"(CHURN) RETRY IN\";\r\n    timeToDisplay = `${globalData?.timeUntilRetry?.days}d ${globalData?.timeUntilRetry?.hours}h ${globalData?.timeUntilRetry?.minutes}m`;\r\n  } else if (globalData?.retiring === \"true\") {\r\n    msgTitle = \"(CHURN) CURRENTLY CHURNING\";\r\n    timeToDisplay = \"Churning\";\r\n  } else {\r\n    msgTitle = \"(CHURN) TIME UNTIL\";\r\n    timeToDisplay = `${globalData?.timeUntilChurn?.days}d ${globalData?.timeUntilChurn?.hours}h ${globalData?.timeUntilChurn?.minutes}m`;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"overview-item\">\r\n        <img alt=\"#\" src={blockIcon} className=\"overview-item__icon\" />\r\n        <div className=\"overview-item__value\">\r\n          <div className=\"overview-item__value-title\">CURRENT BLOCK</div>\r\n          <div className=\"overview-item__value-value\">\r\n            {parseInt(globalData.maxHeight).toLocaleString()}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"overview-item\">\r\n        <img alt=\"#\" src={churnsIcon} className=\"overview-item__icon\" />\r\n        <div className=\"overview-item__value\">\r\n          <div className=\"overview-item__value-title\">{msgTitle} </div>\r\n          <div className=\"overview-item__value-value\">{timeToDisplay}</div>\r\n        </div>\r\n      </div>\r\n      <div className=\"overview-item\">\r\n        <img alt=\"#\" src={bondIcon} className=\"overview-item__icon\" />\r\n        <div className=\"overview-item__value\">\r\n          <div className=\"overview-item__value-title\">TOTAL BONDED VALUE</div>\r\n          <div className=\"overview-item__value-value\">\r\n            ᚱ\r\n            {state.activeNodes.length > 0\r\n              ? parseInt(\r\n                  state.activeNodes\r\n                    .map((item) => item.bond)\r\n                    .reduce((prev, next) => prev + next) / 100000000\r\n                ).toLocaleString()\r\n              : \"0\"}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"overview-item\">\r\n        <img alt=\"#\" src={marcketCapIcon} className=\"overview-item__icon\" />\r\n        <div className=\"overview-item__value\">\r\n          <div className=\"overview-item__value-title\">MARKET CAP</div>\r\n          <div className=\"overview-item__value-value\">\r\n            ${globalData?.coingecko?.market_cap?.toLocaleString()}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"overview-item\">\r\n        <img alt=\"#\" src={timeIcon} className=\"overview-item__icon\" />\r\n        <div className=\"overview-item__value\">\r\n          <div className=\"overview-item__value-title\">24 HR VOLUME</div>\r\n          <div className=\"overview-item__value-value\">\r\n            ${globalData?.coingecko?.total_volume?.toLocaleString()}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Popover\r\n        content={\r\n          chartDataConfig?.datasets?.[0]?.data &&\r\n          chartDataConfig.datasets[0].data.length > 0 ? (\r\n            <CustomLineChart\r\n              key={JSON.stringify(chartDataConfig)}\r\n              data={chartDataConfig}\r\n              options={maxStakeOptions}\r\n            />\r\n          ) : (\r\n            <div>No data available</div>\r\n          )\r\n        }\r\n        title=\"Max Effective Stake Over Time\"\r\n        trigger=\"click\"\r\n        overlayClassName=\"my-custom-popover\"\r\n        onVisibleChange={(visible) => handlePopoverVisibility(visible)}\r\n      >\r\n        <div\r\n          className=\"overview-item\"\r\n          onClick={handleMaxEffectiveStake}\r\n          style={{ cursor: \"pointer\" }}\r\n        >\r\n          <img alt=\"#\" src={verticalTopIcon} className=\"overview-item__icon\" />\r\n          <div className=\"overview-item__value\">\r\n            <div className=\"overview-item__value-title\">MAX EFFECTIVE BOND</div>\r\n            <div className=\"overview-item__value-value\">\r\n              ᚱ\r\n              {parseInt(\r\n                globalData.maxEffectiveStake / 100000000\r\n              ).toLocaleString()}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Popover>\r\n      <Popover\r\n        content={\r\n          chartDataConfig?.datasets?.[0]?.data &&\r\n          chartDataConfig.datasets[0].data.length > 0 ? (\r\n            <CustomLineChart\r\n              key={JSON.stringify(chartDataConfig)}\r\n              data={chartDataConfig}\r\n              options={totalBondOptions}\r\n            />\r\n          ) : (\r\n            <div>No data available</div>\r\n          )\r\n        }\r\n        title=\"Total Bond Over Time\"\r\n        trigger=\"click\"\r\n        overlayClassName=\"my-custom-popover\"\r\n        onVisibleChange={(visible) => handlePopoverVisibility(visible)}\r\n      >\r\n        <div\r\n          className=\"overview-item\"\r\n          onClick={handleClickTotalBond}\r\n          style={{ cursor: \"pointer\" }}\r\n        >\r\n          <img alt=\"#\" src={chartLineIcon} className=\"overview-item__icon\" />\r\n          <div className=\"overview-item__value\">\r\n            <div className=\"overview-item__value-title\">\r\n              TOTAL BOND OVER TIME\r\n            </div>\r\n            <div className=\"overview-item__value-value\">CLICK HERE</div>\r\n          </div>\r\n        </div>\r\n      </Popover>\r\n    </>\r\n  );\r\n};\r\n\r\nconst CoinGeckoData = ({ globalData }) => {\r\n  return (\r\n    <>\r\n      <div className=\"overview-item\">\r\n        <img alt=\"#\" src={runeUsdtIcon} className=\"overview-item__icon\" />\r\n        <div className=\"overview-item__value\">\r\n          <div className=\"overview-item__value-title\">PRICE</div>\r\n          <div className=\"overview-item__value-value\">\r\n            ${globalData?.coingecko?.current_price?.toLocaleString()}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"overview-item\">\r\n        <img alt=\"#\" src={highTradingIcon} className=\"overview-item__icon\" />\r\n        <div className=\"overview-item__value\">\r\n          <div className=\"overview-item__value-title\">24 HR HIGH</div>\r\n          <div className=\"overview-item__value-value\">\r\n            ${globalData?.coingecko?.high_24h}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"overview-item\">\r\n        <img alt=\"#\" src={lowTradingIcon} className=\"overview-item__icon\" />\r\n        <div className=\"overview-item__value\">\r\n          <div className=\"overview-item__value-title\">24 HR LOW</div>\r\n          <div className=\"overview-item__value-value\">\r\n            ${globalData?.coingecko?.low_24h}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"overview-item\">\r\n        <img alt=\"#\" src={mcapRankIcon} className=\"overview-item__icon\" />\r\n        <div className=\"overview-item__value\">\r\n          <div className=\"overview-item__value-title\">MARKET CAP RANK</div>\r\n          <div className=\"overview-item__value-value\">\r\n            {globalData?.coingecko?.market_cap_rank}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"overview-item\">\r\n        <img alt=\"#\" src={totalSupplyIcon} className=\"overview-item__icon\" />\r\n        <div className=\"overview-item__value\">\r\n          <div className=\"overview-item__value-title\">TOTAL SUPPLY</div>\r\n          <div className=\"overview-item__value-value\">\r\n            ᚱ{globalData?.coingecko?.total_supply?.toLocaleString()}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst ReturnIspImage = ({ isp }) => {\r\n  const style = { width: 25, height: 25 };\r\n\r\n  if (\r\n    isp === \"Amazon.com, Inc.\" ||\r\n    isp === \"Amazon Technologies Inc.\" ||\r\n    isp === \"Amazon.com\"\r\n  ) {\r\n    return <img alt=\"#\" src={imageAWS} style={style} />;\r\n  }\r\n  if (isp === \"DigitalOcean, LLC\" || isp === \"DigitalOcean\") {\r\n    return <img alt=\"#\" src={imageDO} style={style} />;\r\n  }\r\n  if (isp === \"Google LLC\") {\r\n    return <img alt=\"#\" src={imageGCP} style={style} />;\r\n  }\r\n\r\n  if (isp === \"Microsoft Corporation\") {\r\n    return <img alt=\"#\" src={imageAZURE} style={style} />;\r\n  }\r\n\r\n  if (isp === \"Hetzner Online GmbH\") {\r\n    return <img alt=\"#\" src={imageHETZNER} style={style} />;\r\n  }\r\n\r\n  if (isp === \"The Constant Company\" || isp === \"The Constant Company, LLC\") {\r\n    return <img alt=\"#\" src={imageVULTR} style={style} />;\r\n  }\r\n\r\n  if (isp === \"Leaseweb UK Limited\" || isp === \"Leaseweb USA, Inc.\") {\r\n    return <img alt=\"#\" src={imageLeaseweb} style={style} />;\r\n  }\r\n\r\n  if (isp === \"Datacamp Limited\") {\r\n    return <img alt=\"#\" src={imageDatacamp} style={style} />;\r\n  }\r\n\r\n  if (isp === \"Comcast Cable Communications, LLC\") {\r\n    return <img alt=\"#\" src={imageComcast} style={style} />;\r\n  }\r\n\r\n  if (isp === \"Choopa\") {\r\n    return <img alt=\"#\" src={imageChoopa} style={style} />;\r\n  }\r\n\r\n  if (isp === \"Charter Communications Inc\") {\r\n    return <img alt=\"#\" src={imageChartercoms} style={style} />;\r\n  }\r\n\r\n  if (isp === \"AT&T Services, Inc.\") {\r\n    return <img alt=\"#\" src={imageATandT} style={style} />;\r\n  }\r\n\r\n  if (isp === \"Zenlayer Inc\") {\r\n    return <img alt=\"#\" src={imageZenlayer} style={style} />;\r\n  }\r\n\r\n  if (isp === \"Aljeel Aljadeed For Technology\") {\r\n    return <img alt=\"#\" src={imageAljeel} style={style} />;\r\n  }\r\n\r\n  if (isp === \"Hostinger International Limited\") {\r\n    return <img alt=\"#\" src={imageHostinger} style={style} />;\r\n  }\r\n\r\n  return \"-\";\r\n};\r\n\r\nconst ChainTD = ({ chain, obchains, maxChainHeights }) => {\r\n  const delta = obchains[chain] - maxChainHeights[chain];\r\n  return (\r\n    <td\r\n      style={{\r\n        textAlign: \"center\",\r\n        color: delta < -5 || isNaN(delta) ? \"red\" : null,\r\n      }}\r\n    >\r\n      {delta === 0 ? \"OK\" : delta.toString()}\r\n    </td>\r\n  );\r\n};\r\n\r\nconst BondProviderPopOver = ({ data }) => {\r\n  const totalBond = data\r\n    .map((item) => parseInt(item.bond))\r\n    .reduce((a, b) => a + b, 0);\r\n\r\n  const d = data.map((item, index) => {\r\n    return (\r\n      <div\r\n        key={index}\r\n        style={{ width: 200, display: \"flex\", justifyContent: \"space-between\" }}\r\n      >\r\n        <span>\r\n          {item.bond_address.substring(\r\n            item.bond_address.length - 4,\r\n            item.bond_address.length\r\n          )}\r\n        </span>\r\n        <span>{((item.bond / totalBond) * 100).toFixed(2)}%</span>\r\n        <span>\r\n          ᚱ{parseInt((item.bond / 100000000).toFixed()).toLocaleString()}\r\n        </span>\r\n      </div>\r\n    );\r\n  });\r\n  return d;\r\n};\r\n\r\nconst NodeTable = ({\r\n  handlePopoverVisibility,\r\n  nodeData,\r\n  clickSortHeader,\r\n  handleClickBond,\r\n  handleClickRewards,\r\n  handleClickSlashes,\r\n  sortColour,\r\n  maxChainHeights,\r\n  chains,\r\n  addToFav,\r\n  whichHeart,\r\n  chartDataConfig,\r\n  bondOptions,\r\n  rewardsOptions,\r\n  slashesOptions,\r\n  maxPositionOptions,\r\n  maxPositionChartDataConfig,\r\n  handleNodePosition,\r\n  visibleColumns = { ...defaulColumns },\r\n  sortBy = \"\",\r\n  sortDirection = \"\",\r\n}) => {\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [itemsPerPage, setItemsPerPage] = useState(100);\r\n\r\n  const totalPages = Math.ceil(nodeData.length / itemsPerPage);\r\n  const pageNumbers = [];\r\n\r\n  for (let i = 1; i <= totalPages; i++) {\r\n    pageNumbers.push(i);\r\n  }\r\n\r\n  const handleClick = (event) => {\r\n    setCurrentPage(Number(event.target.id));\r\n  };\r\n\r\n  const handleNext = () => {\r\n    setCurrentPage((prevPage) =>\r\n      prevPage === totalPages ? prevPage : prevPage + 1\r\n    );\r\n  };\r\n\r\n  const handlePrev = () => {\r\n    setCurrentPage((prevPage) => (prevPage === 1 ? prevPage : prevPage - 1));\r\n  };\r\n\r\n  const renderPageNumbers = pageNumbers.map((number) => {\r\n    return (\r\n      <li\r\n        key={number}\r\n        id={number}\r\n        onClick={handleClick}\r\n        className={`paging-item ${currentPage === number ? \"active\" : null}`}\r\n      >\r\n        {number}\r\n      </li>\r\n    );\r\n  });\r\n\r\n  const indexOfLastItem = currentPage * itemsPerPage;\r\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\r\n  const currentItems = nodeData.slice(indexOfFirstItem, indexOfLastItem);\r\n\r\n  const getHeaderClassName = (key) => {\r\n    return visibleColumns && visibleColumns[key]\r\n      ? \"tableHeader\"\r\n      : \"tableHeader hidden\";\r\n  };\r\n\r\n  const getCellClassName = (key) => {\r\n    return visibleColumns && visibleColumns[key] ? \"\" : \"hidden\";\r\n  };\r\n\r\n  const updatePagingItem = (value) => {\r\n    setItemsPerPage(value);\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"item-to-show\">\r\n        <span>Nodes per page:</span>\r\n\r\n        <Select\r\n          defaultValue={itemsPerPage}\r\n          showSearch={false}\r\n          onChange={updatePagingItem}\r\n          style={{ width: 80, borderRadius: 10 }}\r\n          dropdownMatchSelectWidth={false}\r\n          options={[\r\n            { value: \"10\", label: \"10\" },\r\n            { value: \"25\", label: \"25\" },\r\n            { value: \"50\", label: \"50\" },\r\n            { value: \"100\", label: \"100\" },\r\n          ]}\r\n        />\r\n      </div>\r\n      <div className=\"data-table-wrapper\">\r\n        <div style={{ width: \"100%\" }}>\r\n          <table\r\n            style={{\r\n              borderWidth: 1.1,\r\n              borderColor: \"rgba(0,0,0,1)\",\r\n              width: \"100%\",\r\n            }}\r\n          >\r\n            <thead>\r\n              <tr\r\n                style={{\r\n                  borderStyle: \"solid\",\r\n                  borderWidth: 1.1,\r\n                  borderColor: \"rgba(0,0,0,1)\",\r\n                  color: \"black\",\r\n                  textAlign: \"center\",\r\n                  marginRight: 10,\r\n                }}\r\n              >\r\n                <th style={{ backgroundColor: \"rgba(24, 34, 51, 0.4)\" }}></th>\r\n                <th\r\n                  className={getHeaderClassName(\"nodes\")}\r\n                  style={{\r\n                    ...headerStyle,\r\n                    color: sortColour(\"node_address\"),\r\n                    textAlign: \"center\",\r\n                    minWidth: 100,\r\n                  }}\r\n                >\r\n                  <span onClick={() => clickSortHeader(\"node_address\")}>\r\n                    Validator Nodes\r\n                    <SortIcon\r\n                      column={\"node_address\"}\r\n                      sortBy={sortBy}\r\n                      sortDirection={sortDirection}\r\n                    />\r\n                  </span>\r\n                </th>\r\n                <th\r\n                  className={getHeaderClassName(\"age\")}\r\n                  style={{\r\n                    ...headerStyle,\r\n                    color: sortColour(\"age\"),\r\n                    textAlign: \"center\",\r\n                    minWidth: 90,\r\n                  }}\r\n                >\r\n                  <span onClick={() => clickSortHeader(\"age\")}>\r\n                    Age\r\n                    <SortIcon\r\n                      column={\"age\"}\r\n                      sortBy={sortBy}\r\n                      sortDirection={sortDirection}\r\n                    />\r\n                  </span>\r\n                </th>\r\n                <th\r\n                  className={getHeaderClassName(\"action\")}\r\n                  style={{\r\n                    ...headerStyle,\r\n                    color: sortColour(\"action\"),\r\n                    textAlign: \"center\",\r\n                    minWidth: 100,\r\n                  }}\r\n                >\r\n                  <span onClick={() => clickSortHeader(\"action\")}>\r\n                    Action\r\n                    <SortIcon\r\n                      column={\"action\"}\r\n                      sortBy={sortBy}\r\n                      sortDirection={sortDirection}\r\n                    />\r\n                  </span>\r\n                </th>\r\n                <th\r\n                  className={getHeaderClassName(\"isp\")}\r\n                  style={{\r\n                    ...headerStyle,\r\n                    color: sortColour(\"isp\"),\r\n                    textAlign: \"center\",\r\n                    minWidth: 50,\r\n                  }}\r\n                >\r\n                  <span onClick={() => clickSortHeader(\"isp\")}>\r\n                    ISP\r\n                    <SortIcon\r\n                      column={\"isp\"}\r\n                      sortBy={sortBy}\r\n                      sortDirection={sortDirection}\r\n                    />\r\n                  </span>\r\n                </th>\r\n                <th\r\n                  className=\"tableHeader\"\r\n                  style={{\r\n                    ...headerStyle,\r\n                    color: sortColour(\"location\"),\r\n                    textAlign: \"center\",\r\n                    minWidth: 100,\r\n                  }}\r\n                >\r\n                  <span onClick={() => clickSortHeader(\"location\")}>\r\n                    Location\r\n                    <SortIcon\r\n                      column={\"location\"}\r\n                      sortBy={sortBy}\r\n                      sortDirection={sortDirection}\r\n                    />\r\n                  </span>\r\n                </th>\r\n                <th\r\n                  className={getHeaderClassName(\"bond\")}\r\n                  style={{\r\n                    ...headerStyle,\r\n                    color: sortColour(\"bond\"),\r\n                    minWidth: 75,\r\n                  }}\r\n                >\r\n                  <span onClick={() => clickSortHeader(\"bond\")}>\r\n                    Bond\r\n                    <SortIcon\r\n                      column={\"bond\"}\r\n                      sortBy={sortBy}\r\n                      sortDirection={sortDirection}\r\n                    />\r\n                  </span>\r\n                </th>\r\n                <th\r\n                  className={getHeaderClassName(\"providers\")}\r\n                  style={{\r\n                    ...headerStyle,\r\n                    color: sortColour(\"bond_providers\"),\r\n                    textAlign: \"center\",\r\n                  }}\r\n                >\r\n                  <span onClick={() => clickSortHeader(\"bond_providers\")}>\r\n                    Providers\r\n                    <SortIcon\r\n                      column={\"bond_providers\"}\r\n                      sortBy={sortBy}\r\n                      sortDirection={sortDirection}\r\n                    />\r\n                  </span>\r\n                </th>\r\n                <th\r\n                  className={getHeaderClassName(\"rewards\")}\r\n                  style={{\r\n                    ...headerStyle,\r\n                    color: sortColour(\"current_award\"),\r\n                    textAlign: \"center\",\r\n                  }}\r\n                >\r\n                  <span onClick={() => clickSortHeader(\"current_award\")}>\r\n                    Rewards\r\n                    <SortIcon\r\n                      column={\"current_award\"}\r\n                      sortBy={sortBy}\r\n                      sortDirection={sortDirection}\r\n                    />\r\n                  </span>\r\n                </th>\r\n                <th\r\n                  className={getHeaderClassName(\"apy\")}\r\n                  style={{ ...headerStyle, color: sortColour(\"apy\") }}\r\n                >\r\n                  <span onClick={() => clickSortHeader(\"apy\")}>\r\n                    APY\r\n                    <SortIcon\r\n                      column={\"apy\"}\r\n                      sortBy={sortBy}\r\n                      sortDirection={sortDirection}\r\n                    />\r\n                  </span>\r\n                </th>\r\n                <th\r\n                  className={getHeaderClassName(\"slashes\")}\r\n                  style={{\r\n                    ...headerStyle,\r\n                    color: sortColour(\"slash_points\"),\r\n                    textAlign: \"center\",\r\n                  }}\r\n                >\r\n                  <span onClick={() => clickSortHeader(\"slash_points\")}>\r\n                    Slashes\r\n                    <SortIcon\r\n                      column={\"slash_points\"}\r\n                      sortBy={sortBy}\r\n                      sortDirection={sortDirection}\r\n                    />\r\n                  </span>\r\n                </th>\r\n                <th\r\n                  className={getHeaderClassName(\"score\")}\r\n                  style={{ ...headerStyle, color: sortColour(\"score\") }}\r\n                >\r\n                  <span onClick={() => clickSortHeader(\"score\")}>\r\n                    Score\r\n                    <SortIcon\r\n                      column={\"score\"}\r\n                      sortBy={sortBy}\r\n                      sortDirection={sortDirection}\r\n                    />\r\n                  </span>\r\n                </th>\r\n                <th\r\n                  className={getHeaderClassName(\"version\")}\r\n                  style={{ ...headerStyle, color: sortColour(\"version\") }}\r\n                >\r\n                  <span onClick={() => clickSortHeader(\"version\")}>\r\n                    Version\r\n                    <SortIcon\r\n                      column={\"version\"}\r\n                      sortBy={sortBy}\r\n                      sortDirection={sortDirection}\r\n                    />\r\n                  </span>\r\n                </th>\r\n                <th\r\n                  className=\"tableHeader\"\r\n                  style={{\r\n                    ...headerStyle,\r\n                    color: sortColour(\"leave\"),\r\n                    textAlign: \"center\",\r\n                  }}\r\n                >\r\n                  <span onClick={() => clickSortHeader(\"leave\")}>\r\n                    {leaveIcon}\r\n                    <SortIcon\r\n                      column={\"leave\"}\r\n                      sortBy={sortBy}\r\n                      sortDirection={sortDirection}\r\n                    />\r\n                  </span>\r\n                </th>\r\n                <th\r\n                  className={getHeaderClassName(\"rpc\")}\r\n                  style={{ ...headerStyle, textAlign: \"center\" }}\r\n                >\r\n                  RPC\r\n                </th>\r\n                <th\r\n                  className={getHeaderClassName(\"bfr\")}\r\n                  style={{ ...headerStyle, textAlign: \"center\" }}\r\n                >\r\n                  BFR\r\n                </th>\r\n\r\n                {chains && (\r\n                  <>\r\n                    <th\r\n                      className=\"tableHeader\"\r\n                      style={{ ...headerStyle, ...iconStyle }}\r\n                    >\r\n                      <img\r\n                        alt=\"#\"\r\n                        src={binance}\r\n                        style={{\r\n                          width: 25,\r\n                          height: 25,\r\n                          display: \"block\",\r\n                          margin: \"auto\",\r\n                        }}\r\n                      />\r\n                    </th>\r\n                    <th\r\n                      className=\"tableHeader\"\r\n                      style={{ ...headerStyle, ...iconStyle }}\r\n                    >\r\n                      <img\r\n                        alt=\"#\"\r\n                        src={bitcoin}\r\n                        style={{\r\n                          width: 25,\r\n                          height: 25,\r\n                          display: \"block\",\r\n                          margin: \"auto\",\r\n                        }}\r\n                      />\r\n                    </th>\r\n                    <th\r\n                      className=\"tableHeader\"\r\n                      style={{ ...headerStyle, ...iconStyle }}\r\n                    >\r\n                      <img\r\n                        alt=\"#\"\r\n                        src={eth}\r\n                        style={{\r\n                          width: 25,\r\n                          height: 25,\r\n                          display: \"block\",\r\n                          margin: \"auto\",\r\n                        }}\r\n                      />\r\n                    </th>\r\n                    <th\r\n                      className=\"tableHeader\"\r\n                      style={{ ...headerStyle, ...iconStyle }}\r\n                    >\r\n                      <img\r\n                        alt=\"#\"\r\n                        src={litecoin}\r\n                        style={{\r\n                          width: 25,\r\n                          height: 25,\r\n                          display: \"block\",\r\n                          margin: \"auto\",\r\n                        }}\r\n                      />\r\n                    </th>\r\n                    <th\r\n                      className=\"tableHeader\"\r\n                      style={{ ...headerStyle, ...iconStyle }}\r\n                    >\r\n                      <img\r\n                        alt=\"#\"\r\n                        src={bitcoincash}\r\n                        style={{\r\n                          width: 25,\r\n                          height: 25,\r\n                          display: \"block\",\r\n                          margin: \"auto\",\r\n                        }}\r\n                      />\r\n                    </th>\r\n                    <th\r\n                      className=\"tableHeader\"\r\n                      style={{ ...headerStyle, ...iconStyle }}\r\n                    >\r\n                      <img\r\n                        alt=\"#\"\r\n                        src={dogecoin}\r\n                        style={{\r\n                          width: 25,\r\n                          height: 25,\r\n                          display: \"block\",\r\n                          margin: \"auto\",\r\n                        }}\r\n                      />\r\n                    </th>\r\n                    <th\r\n                      className=\"tableHeader\"\r\n                      style={{ ...headerStyle, ...iconStyle }}\r\n                    >\r\n                      <img\r\n                        alt=\"#\"\r\n                        src={gaia}\r\n                        style={{\r\n                          width: 25,\r\n                          height: 25,\r\n                          display: \"block\",\r\n                          margin: \"auto\",\r\n                        }}\r\n                      />\r\n                    </th>\r\n                    <th\r\n                      className=\"tableHeader\"\r\n                      style={{ ...headerStyle, ...iconStyle }}\r\n                    >\r\n                      <img\r\n                        alt=\"#\"\r\n                        src={avax}\r\n                        style={{\r\n                          width: 25,\r\n                          height: 25,\r\n                          display: \"block\",\r\n                          margin: \"auto\",\r\n                        }}\r\n                      />\r\n                    </th>\r\n                  </>\r\n                )}\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {currentItems.map((item, index) => (\r\n                <tr key={index} style={{ ...trStyle }}>\r\n                  <td\r\n                    style={{\r\n                      backgroundColor: \"rgba(24, 34, 51, 0.4)\",\r\n                      minWidth: 35,\r\n                      width: 50,\r\n                      paddingLeft: 5,\r\n                    }}\r\n                  >\r\n                    {index + 1}\r\n                  </td>\r\n                  <td\r\n                    className={getCellClassName(\"nodes\")}\r\n                    style={{\r\n                      ...tdStyle,\r\n                      textAlign: \"center\",\r\n                      minWidth: 250,\r\n                      maxWidth: 300,\r\n                    }}\r\n                  >\r\n                    <Popover\r\n                      content={item.node_address}\r\n                      title={\"Thornode Address\"}\r\n                      trigger=\"hover\"\r\n                    >\r\n                      <span\r\n                        style={{ cursor: \"pointer\" }}\r\n                        className=\"nodeaddress\"\r\n                        onClick={() =>\r\n                          copyToClipWithPopup(\r\n                            \"Node address copied to clipboard:\",\r\n                            item.node_address\r\n                          )\r\n                        }\r\n                      >\r\n                        {`...${item.node_address.substring(\r\n                          item.node_address.length - 4\r\n                        )}`}\r\n                      </span>\r\n                    </Popover>\r\n                    <Popover\r\n                      content={\r\n                        maxPositionChartDataConfig?.datasets?.length > 0 ? (\r\n                          <CustomScatterChart\r\n                            key={JSON.stringify(maxPositionChartDataConfig)}\r\n                            data={maxPositionChartDataConfig}\r\n                            options={maxPositionOptions}\r\n                          />\r\n                        ) : (\r\n                          <div>No data available</div>\r\n                        )\r\n                      }\r\n                      title={`Performance Over Time for ${item.node_address.slice(\r\n                        -4\r\n                      )}`}\r\n                      trigger=\"click\"\r\n                      overlayClassName=\"my-custom-popover\"\r\n                      onVisibleChange={(visible) =>\r\n                        handlePopoverVisibility(visible)\r\n                      }\r\n                    >\r\n                      <span className=\"icon-wrapper\">\r\n                        <DotChartOutlined\r\n                          style={{ stroke: \"currentColor\" }}\r\n                          onClick={() => handleNodePosition(item.node_address)}\r\n                        />\r\n                      </span>\r\n                    </Popover>\r\n                    <Icons\r\n                      address={item.node_address}\r\n                      ip_address={item.ip_address}\r\n                      addToFav={addToFav}\r\n                      whichHeart={whichHeart}\r\n                    />\r\n                  </td>\r\n                  <td\r\n                    className={getCellClassName(\"age\")}\r\n                    style={{ ...tdStyle, textAlign: \"center\" }}\r\n                  >\r\n                    {item.age.toFixed(2)}\r\n                  </td>\r\n                  <td\r\n                    className={getCellClassName(\"action\")}\r\n                    style={{ ...tdStyle, textAlign: \"center\", fontSize: 12 }}\r\n                  >\r\n                    {item.action}\r\n                  </td>\r\n                  <td\r\n                    className={getCellClassName(\"isp\")}\r\n                    style={{ ...tdStyle, textAlign: \"center\" }}\r\n                  >\r\n                    <Popover\r\n                      content={item.isp}\r\n                      title={\"Provider\"}\r\n                      trigger=\"hover\"\r\n                    >\r\n                      <span style={{ cursor: \"pointer\" }}>\r\n                        <ReturnIspImage isp={item.isp} />\r\n                      </span>\r\n                    </Popover>\r\n                  </td>\r\n                  <td style={{ ...tdStyle, textAlign: \"center\", fontSize: 12 }}>\r\n                    {item.location}\r\n                  </td>\r\n                  <td\r\n                    className={getCellClassName(\"bond\")}\r\n                    style={{ tdStyle, textAlign: \"center\" }}\r\n                    onClick={() => handleClickBond(item.node_address)}\r\n                  >\r\n                    <Popover\r\n                      content={\r\n                        chartDataConfig?.datasets?.[0]?.data &&\r\n                        chartDataConfig.datasets[0].data.length > 0 ? (\r\n                          <CustomLineChart\r\n                            key={JSON.stringify(chartDataConfig)}\r\n                            data={chartDataConfig}\r\n                            options={bondOptions}\r\n                          />\r\n                        ) : (\r\n                          <div>No data available</div>\r\n                        )\r\n                      }\r\n                      title={`Bond Value Over Time for ${item.node_address.slice(\r\n                        -4\r\n                      )}`}\r\n                      trigger=\"click\"\r\n                      overlayClassName=\"my-custom-popover\"\r\n                      onVisibleChange={(visible) =>\r\n                        handlePopoverVisibility(visible)\r\n                      }\r\n                    >\r\n                      <span\r\n                        style={{\r\n                          display: \"inline-flex\",\r\n                          color: \"#1890ff\",\r\n                          cursor: \"pointer\",\r\n                        }}\r\n                      >\r\n                        <HistoryOutlined style={{ marginRight: 4 }} />ᚱ\r\n                        {parseInt(\r\n                          (item.bond / 100000000).toFixed()\r\n                        ).toLocaleString()}\r\n                      </span>\r\n                    </Popover>\r\n                  </td>\r\n                  <td\r\n                    className={getCellClassName(\"providers\")}\r\n                    style={{ ...tdStyle, textAlign: \"center\" }}\r\n                  >\r\n                    {\" \"}\r\n                    <Popover\r\n                      content={\r\n                        <BondProviderPopOver\r\n                          data={item.bond_providers.providers}\r\n                        />\r\n                      }\r\n                      title={\"Bond Providers\"}\r\n                      trigger=\"hover\"\r\n                    >\r\n                      <span style={{ cursor: \"pointer\" }}>\r\n                        {item.bond_providers.providers.length}\r\n                      </span>\r\n                    </Popover>\r\n                  </td>\r\n                  <td\r\n                    className={getCellClassName(\"rewards\")}\r\n                    style={{ ...tdStyle, textAlign: \"center\" }}\r\n                    onClick={() => handleClickRewards(item.node_address)}\r\n                  >\r\n                    <Popover\r\n                      content={\r\n                        chartDataConfig?.datasets?.[0]?.data &&\r\n                        chartDataConfig.datasets[0].data.length > 0 ? (\r\n                          <CustomLineChart\r\n                            key={JSON.stringify(chartDataConfig)}\r\n                            data={chartDataConfig}\r\n                            options={rewardsOptions}\r\n                          />\r\n                        ) : (\r\n                          <div>No data available</div>\r\n                        )\r\n                      }\r\n                      title={`Rewards Over Time for ${item.node_address.slice(\r\n                        -4\r\n                      )}`}\r\n                      trigger=\"click\"\r\n                      overlayClassName=\"my-custom-popover\"\r\n                      onVisibleChange={(visible) =>\r\n                        handlePopoverVisibility(visible)\r\n                      }\r\n                    >\r\n                      <span\r\n                        style={{\r\n                          display: \"inline-flex\",\r\n                          color: \"#1890ff\",\r\n                          cursor: \"pointer\",\r\n                        }}\r\n                      >\r\n                        <HistoryOutlined style={{ marginRight: 4 }} />ᚱ\r\n                        {parseInt(\r\n                          (item.current_award / 100000000).toFixed()\r\n                        ).toLocaleString()}\r\n                      </span>\r\n                    </Popover>\r\n                  </td>\r\n                  <td\r\n                    className={getCellClassName(\"apy\")}\r\n                    style={{ ...tdStyle, textAlign: \"center\" }}\r\n                  >\r\n                    {item.apy}\r\n                  </td>\r\n                  <td\r\n                    className={getCellClassName(\"slashes\")}\r\n                    style={{ ...tdStyle, textAlign: \"center\" }}\r\n                    onClick={() => handleClickSlashes(item.node_address)}\r\n                  >\r\n                    <Popover\r\n                      content={\r\n                        chartDataConfig?.datasets?.[0]?.data &&\r\n                        chartDataConfig.datasets[0].data.length > 0 ? (\r\n                          <CustomLineChart\r\n                            key={JSON.stringify(chartDataConfig)}\r\n                            data={chartDataConfig}\r\n                            options={slashesOptions}\r\n                          />\r\n                        ) : (\r\n                          <div>No data available</div>\r\n                        )\r\n                      }\r\n                      title={`Slashes Over Time for ${item.node_address.slice(\r\n                        -4\r\n                      )}`}\r\n                      trigger=\"click\"\r\n                      overlayClassName=\"my-custom-popover\"\r\n                      onVisibleChange={(visible) =>\r\n                        handlePopoverVisibility(visible)\r\n                      }\r\n                    >\r\n                      <span\r\n                        style={{\r\n                          display: \"inline-flex\",\r\n                          color: \"#1890ff\",\r\n                          cursor: \"pointer\",\r\n                        }}\r\n                      >\r\n                        <HistoryOutlined style={{ marginRight: 4 }} />\r\n                        {parseInt(item.slash_points).toLocaleString()}\r\n                      </span>\r\n                    </Popover>\r\n                  </td>\r\n                  <td\r\n                    className={getCellClassName(\"score\")}\r\n                    style={{ ...tdStyle, textAlign: \"center\" }}\r\n                  >\r\n                    {item.score}\r\n                  </td>\r\n                  <td\r\n                    className={getCellClassName(\"version\")}\r\n                    style={{ ...tdStyle, textAlign: \"center\" }}\r\n                  >\r\n                    {item.version}\r\n                  </td>\r\n                  {/* <td className={getCellClassName('rpc')} style={{...tdStyle, textAlign: 'center'}}><a style={{color: 'rgba(0,0,0,0.85)'}} href={`http://${item.ip_address}:27147/health?`} target=\"_blank\" rel=\"noopener noreferrer\">{item.rpc === 'true' ? '*' : 'BAD'}</a></td> */}\r\n                  <td style={{ ...tdStyle, textAlign: \"center\" }}>\r\n                    {item.forced_to_leave === 1 || item.requested_to_leave === 1\r\n                      ? \"yes\"\r\n                      : \"-\"}\r\n                  </td>\r\n                  <td\r\n                    className={getCellClassName(\"rpc\")}\r\n                    style={{ ...tdStyle, textAlign: \"center\" }}\r\n                  >\r\n                    <a\r\n                      style={{ color: \"rgba(0,0,0,0.85)\" }}\r\n                      href={`http://${item.ip_address}:27147/health?`}\r\n                      target=\"_blank\"\r\n                      rel=\"noopener noreferrer\"\r\n                    >\r\n                      {item.rpc !== \"null\" ? \"*\" : \"Bad\"}\r\n                    </a>\r\n                  </td>\r\n                  <td\r\n                    className={getCellClassName(\"bfr\")}\r\n                    style={{ ...tdStyle, textAlign: \"center\" }}\r\n                  >\r\n                    <a\r\n                      style={{ color: \"rgba(0,0,0,0.85)\" }}\r\n                      href={`http://${item.ip_address}:6040/p2pid`}\r\n                      target=\"_blank\"\r\n                      rel=\"noopener noreferrer\"\r\n                    >\r\n                      {item.bifrost !== \"null\" ? \"*\" : \"Bad\"}\r\n                    </a>\r\n                  </td>\r\n\r\n                  {chains && (\r\n                    <>\r\n                      <ChainTD\r\n                        chain={\"BNB\"}\r\n                        obchains={item.obchains}\r\n                        maxChainHeights={maxChainHeights}\r\n                      />\r\n                      <ChainTD\r\n                        chain={\"BTC\"}\r\n                        obchains={item.obchains}\r\n                        maxChainHeights={maxChainHeights}\r\n                      />\r\n                      <ChainTD\r\n                        chain={\"ETH\"}\r\n                        obchains={item.obchains}\r\n                        maxChainHeights={maxChainHeights}\r\n                      />\r\n                      <ChainTD\r\n                        chain={\"LTC\"}\r\n                        obchains={item.obchains}\r\n                        maxChainHeights={maxChainHeights}\r\n                      />\r\n                      <ChainTD\r\n                        chain={\"BCH\"}\r\n                        obchains={item.obchains}\r\n                        maxChainHeights={maxChainHeights}\r\n                      />\r\n                      <ChainTD\r\n                        chain={\"DOGE\"}\r\n                        obchains={item.obchains}\r\n                        maxChainHeights={maxChainHeights}\r\n                      />\r\n                      <ChainTD\r\n                        chain={\"GAIA\"}\r\n                        obchains={item.obchains}\r\n                        maxChainHeights={maxChainHeights}\r\n                      />\r\n                      <ChainTD\r\n                        chain={\"AVAX\"}\r\n                        obchains={item.obchains}\r\n                        maxChainHeights={maxChainHeights}\r\n                      />\r\n                    </>\r\n                  )}\r\n                </tr>\r\n              ))}\r\n              <tr>\r\n                <td></td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n        <div className=\"paging-wrapper\">\r\n          <ul className=\"page-numbers\">\r\n            <li\r\n              onClick={handlePrev}\r\n              className={`nav-button nav-button--prev ${\r\n                currentPage === 1 ? \"disabled\" : null\r\n              }`}\r\n            >\r\n              <LeftOutlined />\r\n            </li>\r\n            {renderPageNumbers}\r\n            <li\r\n              onClick={handleNext}\r\n              className={`nav-button nav-button--next ${\r\n                currentPage === totalPages ? \"disabled\" : null\r\n              }`}\r\n            >\r\n              <RightOutlined />\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nlet timer = null;\r\n\r\nconst defaulColumns = {\r\n  nodes: true,\r\n  age: true,\r\n  action: true,\r\n  isp: true,\r\n  bond: true,\r\n  providers: true,\r\n  rewards: true,\r\n  apy: true,\r\n  slashes: true,\r\n  score: true,\r\n  version: true,\r\n  rpc: true,\r\n  bfr: true,\r\n};\r\nexport default class extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isPopoverOpen: false,\r\n      chartData: [],\r\n      data: [],\r\n      globalData: [],\r\n      sortBy: \"bond\",\r\n      sortDirection: \"desc\",\r\n      activeNodes: [],\r\n      standByNodes: [],\r\n      whitelistedNodes: [],\r\n      animateBlockCount: false,\r\n      myFavNodes: [],\r\n      searchTerm: \"\",\r\n      visibleColumns: defaulColumns,\r\n      nodesFilter: {},\r\n      loading: true,\r\n      minX: null,\r\n      maxX: null,\r\n    };\r\n    this.clickSortHeader = this.clickSortHeader.bind(this);\r\n    this.handleClickRewards = this.handleClickRewards.bind(this);\r\n    this.handleClickSlashes = this.handleClickSlashes.bind(this);\r\n    this.handleClickBond = this.handleClickBond.bind(this);\r\n    this.handleClickTotalBond = this.handleClickTotalBond.bind(this);\r\n    this.handleNodePosition = this.handleNodePosition.bind(this);\r\n  }\r\n\r\n  handlePopoverVisibility = (visible) => {\r\n    this.setState({ isPopoverOpen: visible });\r\n  };\r\n\r\n  async componentWillMount() {\r\n    const myFavNodes = getCookie(\"myFavNodes\");\r\n\r\n    const tmp = myFavNodes.length > 0 ? JSON.parse(myFavNodes) : [];\r\n\r\n    this.setState({ myFavNodes: tmp });\r\n\r\n    this.refreshData();\r\n  }\r\n\r\n  async refreshData() {\r\n    if (this.state.isPopoverOpen) {\r\n      return;\r\n    }\r\n    const data = await getData();\r\n\r\n    if (this.state.loading) {\r\n      this.setState({ loading: false });\r\n    }\r\n\r\n    if (!process.env.NODE_ENV || process.env.NODE_ENV === \"development\") {\r\n      console.log(\"DEV ONLY: Refresh Data Results: \", data);\r\n    }\r\n\r\n    this.setState(\r\n      {\r\n        data: data.data,\r\n        globalData: data.globalData,\r\n        maxChainHeights: data.maxChainHeights,\r\n        animateBlockCount: false,\r\n      },\r\n      () => this.setData()\r\n    ); //Change animateBlockCount to true here for animation\r\n  }\r\n\r\n  componentDidMount() {\r\n    timer = setInterval(() => {\r\n      this.setState({ animateBlockCount: false }, () => this.refreshData());\r\n      //this.refreshData()\r\n    }, 6000);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(timer);\r\n  }\r\n\r\n  addToFav(address) {\r\n    const myFavNodes = getCookie(\"myFavNodes\"); //JSON.parse(\r\n\r\n    if (myFavNodes.length === 0) {\r\n      //in here no current fav nodes\r\n      const singleAddress = JSON.stringify([address]);\r\n      setCookie(\"myFavNodes\", singleAddress);\r\n      this.setState({ myFavNodes: singleAddress }, () => this.setData());\r\n    } else {\r\n      //If we already have some fav nodes\r\n      const newFaveNodes = JSON.parse(myFavNodes);\r\n\r\n      //Need to check if already exists\r\n      if (newFaveNodes.indexOf(address) > -1) {\r\n        //In the array!\r\n\r\n        const newArrayWithRemove = newFaveNodes.filter(\r\n          (item) => item !== address\r\n        );\r\n\r\n        const newFaveNodesNew = JSON.stringify(newArrayWithRemove);\r\n        this.setState({ myFavNodes: newArrayWithRemove }, () => this.setData());\r\n        setCookie(\"myFavNodes\", newFaveNodesNew);\r\n      } else {\r\n        //Not in the array\r\n        newFaveNodes[newFaveNodes.length] = address;\r\n\r\n        const newFaveNodesNew = JSON.stringify(newFaveNodes);\r\n\r\n        this.setState({ myFavNodes: newFaveNodes }, () => this.setData());\r\n        setCookie(\"myFavNodes\", newFaveNodesNew);\r\n      }\r\n    }\r\n  }\r\n\r\n  returnSearchedData(data) {\r\n    if (this.state.searchTerm === \"\") {\r\n      return data;\r\n    } else {\r\n      const filteredNodes = data.filter((item) => {\r\n        return (\r\n          item.node_address.includes(this.state.searchTerm) ||\r\n          item.bondProvidersString.includes(this.state.searchTerm)\r\n        );\r\n      });\r\n      return filteredNodes;\r\n    }\r\n  }\r\n\r\n  setData() {\r\n    //Grab our state so we can mutate it\r\n    let myData = JSON.parse(JSON.stringify(this.state.data));\r\n\r\n    //Add faves to the data, then we can sort by then below\r\n    const newItems = myData.map((item) => {\r\n      if (this.state.myFavNodes.includes(item.node_address)) {\r\n        item.fave = 1;\r\n      } else {\r\n        item.fave = 0;\r\n      }\r\n      return item;\r\n    });\r\n\r\n    /*\r\nWhitelisted\r\nActive\r\nStandby\r\nReady\r\nDisabled\r\n*/\r\n\r\n    //Filter for our three tables\r\n    let activeNodes = newItems.filter((item) => item.status === \"Active\");\r\n    let standbyNodes = newItems.filter(\r\n      (item) =>\r\n        (item.status === \"Standby\" || item.status === \"Ready\") &&\r\n        item.version === this.state.globalData.maxVersion\r\n    );\r\n\r\n    //Create an array of all nodes that are active and standby\r\n    const active_standy_nodes = [\r\n      ...activeNodes.map((item) => {\r\n        return item.node_address;\r\n      }),\r\n      ...standbyNodes.map((item) => {\r\n        return item.node_address;\r\n      }),\r\n    ];\r\n    //White listed are all other nodes which are not active or on standby\r\n    //White listed is really just \"Other\"\r\n    let whitelisted = newItems.filter(\r\n      (item) => !active_standy_nodes.includes(item.node_address)\r\n    );\r\n\r\n    //let whitelisted = newItems.filter(item => !(item.status ==='Active' || item.status ==='Standby' || item.status ==='Ready') /*&& item.version !== this.state.globalData.maxVersion*/)\r\n\r\n    activeNodes = this.findChurnOuts(activeNodes); //Add in the actions for churning\r\n    standbyNodes = this.findChurnIns(standbyNodes); //Add in the actions for nodes churning in\r\n\r\n    //Filter here if any searchTerm from the search bar\r\n    //Need to do after adding the actions\r\n    activeNodes = this.returnSearchedData(activeNodes);\r\n    standbyNodes = this.returnSearchedData(standbyNodes);\r\n    whitelisted = this.returnSearchedData(whitelisted);\r\n\r\n    //Sort and add our favs to the top\r\n    let activeNodesSorted = this.sortData(activeNodes);\r\n    const favActiveNodesSorted = activeNodesSorted.filter(\r\n      (item) => item.fave === 1\r\n    ); //Get our favourites\r\n    activeNodesSorted = activeNodesSorted.filter((item) => item.fave === 0); //Get our non favourites\r\n\r\n    activeNodesSorted = [...favActiveNodesSorted, ...activeNodesSorted]; //Join faves at top with non favourites\r\n\r\n    const standBySorted = this.sortData(standbyNodes);\r\n    const whitelistedSorted = this.sortData(whitelisted);\r\n\r\n    this.setState({\r\n      activeNodes: activeNodesSorted,\r\n      standByNodes: standBySorted,\r\n      whitelistedNodes: whitelistedSorted, //This is really just other\r\n    });\r\n  }\r\n\r\n  onColumnUpdate(config) {\r\n    this.setState({ visibleColumns: config });\r\n  }\r\n\r\n  onNodesFilter(key) {\r\n    this.setState((prevState) => ({\r\n      nodesFilter: {\r\n        ...prevState.nodesFilter,\r\n        [key]: !prevState.nodesFilter[key],\r\n      },\r\n    }));\r\n  }\r\n\r\n  /*\r\nSplit the data into over 300ks and under 300ks\r\nWith the over 300ks, take the top 3 if they exist and apply churn in action\r\nIf 4 nodes churn in instead of 3 each time, add another row\r\n*/\r\n  findChurnIns(standbyNodes) {\r\n    if (standbyNodes.length === 0) return []; //Stops filter from breaking when search returns 0\r\n\r\n    const over300 = standbyNodes.filter((item) => item.bond >= 30000000000000);\r\n    const over300Sorted = this.sortData(over300, \"bond\", \"desc\");\r\n\r\n    if (over300Sorted.length > 0) {\r\n      over300Sorted[Math.min(0, over300Sorted.length - 1)].action = \"Churn In\";\r\n      over300Sorted[Math.min(1, over300Sorted.length - 1)].action = \"Churn In\";\r\n      over300Sorted[Math.min(2, over300Sorted.length - 1)].action = \"Churn In\";\r\n      over300Sorted[Math.min(3, over300Sorted.length - 1)].action = \"Churn In\";\r\n      over300Sorted[Math.min(4, over300Sorted.length - 1)].action = \"Churn In\";\r\n    }\r\n    const under300 = standbyNodes.filter((item) => item.bond < 30000000000000);\r\n\r\n    return [...over300Sorted, ...under300];\r\n  }\r\n\r\n  /*\r\nLowest Bond\r\nOldest Node\r\nWorst Performer (Can't churn out if just churned in, one cycle grace period)\r\n*/\r\n  findChurnOuts(activeNodes) {\r\n    if (activeNodes.length === 0) return []; //Stops filter from breaking when search returns 0\r\n\r\n    let activeNodesSorted = this.sortData(activeNodes, \"age\", \"desc\");\r\n    activeNodesSorted[0].action = \"Oldest\";\r\n\r\n    activeNodesSorted = this.sortData(activeNodes, \"bond\", \"asc\");\r\n    activeNodesSorted[0].action = \"Smallest Bond\";\r\n\r\n    activeNodesSorted = this.sortData(activeNodes, \"score\", \"asc\", true);\r\n    //we set the 'Worst Performing' tag in the sortData function\r\n\r\n    this.calcBadValidatorRedline(activeNodes);\r\n\r\n    return activeNodesSorted;\r\n  }\r\n\r\n  calcBadValidatorRedline(activeNodes) {\r\n    //Only get nodes with slashes greater than 100\r\n    const greater100Slashes = activeNodes.filter(\r\n      (item) => item.slash_points > 100\r\n    );\r\n    //Add all the scores together for thes nodes\r\n    const sum = greater100Slashes.reduce((accumulator, object) => {\r\n      return accumulator + parseFloat(object.score);\r\n    }, 0);\r\n    //Find the average\r\n    const averageScore = sum / (greater100Slashes.length + 1);\r\n\r\n    const validatorLine =\r\n      averageScore / this.state.globalData.BadValidatorRedline;\r\n\r\n    activeNodes.map((item) => {\r\n      if (item.score < validatorLine) {\r\n        item.action = \"Bad Redline\";\r\n      }\r\n      return 0;\r\n    });\r\n  }\r\n\r\n  /*\r\nSort by either string or number\r\nWe use string sort function if value is one of the arrays else do second sort number\r\n*/\r\n  sortData(data, value = null, direction = null, worst_perform = false) {\r\n    const toSortBy = value === null ? this.state.sortBy : value;\r\n    let newData = [];\r\n\r\n    if (\r\n      [\"node\", \"isp\", \"location\", \"version\", \"action\", \"node_address\"].includes(\r\n        toSortBy\r\n      )\r\n    ) {\r\n      //This sort function for strings\r\n      newData = data.sort((a, b) => a[toSortBy].localeCompare(b[toSortBy]));\r\n    } else if (toSortBy === \"bond_providers\") {\r\n      //This is for bond provider sort as we need to go another layer deep in the object\r\n      newData = data.sort(\r\n        (a, b) => a[toSortBy].providers.length - b[toSortBy].providers.length\r\n      );\r\n    } else if (worst_perform === true) {\r\n      //This is for when we are sorting for action of worst performance as we want to exclude any with age under 3 days\r\n      const ageCutOffDays = 3;\r\n      const a = data.filter((item) => parseFloat(item.age) > ageCutOffDays);\r\n      const b = data.filter((item) => parseFloat(item.age) <= ageCutOffDays);\r\n      const aSorted = a.sort((a, b) => b[toSortBy] - a[toSortBy]);\r\n\r\n      aSorted[aSorted.length - 1].action = \"Worst Performing\";\r\n      newData = [...aSorted, ...b];\r\n    } else {\r\n      //This sort function for numbers\r\n      //When sorting, if values are the same, sort by node_address\r\n      newData = data.sort(function (a, b) {\r\n        if (a[toSortBy] === b[toSortBy]) {\r\n          return a[\"node_address\"].localeCompare(b[\"node_address\"]);\r\n        }\r\n        return a[toSortBy] > b[toSortBy] ? 1 : -1;\r\n      });\r\n    }\r\n    //If we pass it a direction, we set it here, if not we take it from the state\r\n    const toDirection =\r\n      direction === null ? this.state.sortDirection : direction;\r\n    if (toDirection === \"desc\") {\r\n      newData.reverse();\r\n    }\r\n\r\n    return newData;\r\n  }\r\n\r\n  clickSortHeader(item) {\r\n    const direction =\r\n      this.state.sortBy !== item\r\n        ? \"desc\"\r\n        : this.state.sortDirection === \"desc\"\r\n        ? \"asc\"\r\n        : \"desc\";\r\n    this.setState({ sortBy: item, sortDirection: direction }, () =>\r\n      this.setData()\r\n    );\r\n  }\r\n\r\n  sortColour(item) {\r\n    return \"#ffffff\";\r\n  }\r\n\r\n  whichHeart(address) {\r\n    return this.state.myFavNodes.includes(address) ? heartFull : heartBlank;\r\n  }\r\n\r\n  handleNodePosition = async (node_address) => {\r\n    this.setState({ isPopoverOpen: true });\r\n    const url = `https://api.liquify.com/thor/api/grabPosition=${node_address}`;\r\n    try {\r\n      const response = await fetch(url);\r\n      const rawData = await response.json();\r\n      if (!rawData || Object.keys(rawData).length === 0) {\r\n        this.setState({ chartData: null });\r\n      } else {\r\n        const maxData = Object.entries(rawData).map(([x, y]) => ({\r\n          x: Number(x),\r\n          y: Number(y.max),\r\n        }));\r\n\r\n        const positionData = Object.entries(rawData).map(([x, y]) => ({\r\n          x: Number(x),\r\n          y: Number(y.position),\r\n        }));\r\n\r\n        const allXValues = [...maxData, ...positionData].map(\r\n          (dataPoint) => dataPoint.x\r\n        );\r\n        const minX = Math.min(...allXValues);\r\n        const maxX = Math.max(...allXValues);\r\n\r\n        this.setState({ maxData, positionData, minX, maxX });\r\n      }\r\n    } catch (error) {\r\n      console.error(`Error fetching data from ${url}:`, error);\r\n    }\r\n  };\r\n\r\n  handleClickSlashes = async (node_address) => {\r\n    this.setState({ isPopoverOpen: true });\r\n    const url = `https://api.liquify.com/thor/api/grabSlashes=${node_address}`;\r\n    try {\r\n      const response = await fetch(url);\r\n      const rawData = await response.json();\r\n      if (!rawData || Object.keys(rawData).length === 0) {\r\n        this.setState({ chartData: null });\r\n      } else {\r\n        const chartData = Object.entries(rawData).map(([x, y]) => ({\r\n          x: Number(x),\r\n          y: Number(y),\r\n        }));\r\n        this.setState({ chartData });\r\n      }\r\n    } catch (error) {\r\n      console.error(`Error fetching data from ${url}:`, error);\r\n    }\r\n  };\r\n\r\n  handleMaxEffectiveStake = async () => {\r\n    this.setState({ isPopoverOpen: true });\r\n    const url = `https://api.liquify.com/thor/api/maxEffectiveStake`;\r\n    try {\r\n      const response = await fetch(url);\r\n      const rawData = await response.json();\r\n      if (!rawData || Object.keys(rawData).length === 0) {\r\n        this.setState({ chartData: null });\r\n      } else {\r\n        const chartData = Object.entries(rawData).map(([x, y]) => ({\r\n          x: Number(x),\r\n          y: Math.round(Number(y) / 100000000),\r\n        }));\r\n\r\n        this.setState({ chartData });\r\n      }\r\n    } catch (error) {\r\n      console.error(`Error fetching data from ${url}:`, error);\r\n    }\r\n  };\r\n\r\n  handleClickTotalBond = async () => {\r\n    this.setState({ isPopoverOpen: true });\r\n    const url = `https://api.liquify.com/thor/api/totalBond`;\r\n    try {\r\n      const response = await fetch(url);\r\n      const rawData = await response.json();\r\n      if (!rawData || Object.keys(rawData).length === 0) {\r\n        this.setState({ chartData: null });\r\n      } else {\r\n        const chartData = Object.entries(rawData).map(([x, y]) => ({\r\n          x: Number(x),\r\n          y: Math.round(Number(y) / 100000000),\r\n        }));\r\n\r\n        this.setState({ chartData });\r\n      }\r\n    } catch (error) {\r\n      console.error(`Error fetching data from ${url}:`, error);\r\n    }\r\n  };\r\n\r\n  handleClickRewards = async (node_address) => {\r\n    this.setState({ isPopoverOpen: true });\r\n    const url = `https://api.liquify.com/thor/api/grabRewards=${node_address}`;\r\n    try {\r\n      const response = await fetch(url);\r\n      const rawData = await response.json();\r\n      if (!rawData || Object.keys(rawData).length === 0) {\r\n        this.setState({ chartData: null });\r\n      } else {\r\n        const chartData = Object.entries(rawData).map(([x, y]) => ({\r\n          x: Number(x),\r\n          y: Math.round(Number(y) / 100000000),\r\n        }));\r\n        this.setState({ chartData });\r\n      }\r\n    } catch (error) {\r\n      console.error(`Error fetching data from ${url}:`, error);\r\n    }\r\n  };\r\n\r\n  handleClickBond = async (node_address) => {\r\n    this.setState({ isPopoverOpen: true });\r\n    const url = `https://api.liquify.com/thor/api/grabBond=${node_address}`;\r\n    try {\r\n      const response = await fetch(url);\r\n      const rawData = await response.json();\r\n      if (!rawData || Object.keys(rawData).length === 0) {\r\n        this.setState({ chartData: null });\r\n      } else {\r\n        const chartData = Object.entries(rawData).map(([x, y]) => ({\r\n          x: Number(x),\r\n          y: Math.round(Number(y) / 100000000),\r\n        }));\r\n        this.setState({ chartData });\r\n      }\r\n    } catch (error) {\r\n      console.error(`Error fetching data from ${url}:`, error);\r\n    }\r\n  };\r\n\r\n  searchBar() {\r\n    return (\r\n      <div className=\"search-input\">\r\n        <Input\r\n          style={{\r\n            width: 500,\r\n            height: 46,\r\n            borderRadius: 6,\r\n            background: \"#fff\",\r\n          }}\r\n          onChange={(event) =>\r\n            this.setState(\r\n              { searchTerm: event.target.value.trim().toLowerCase() },\r\n              () => this.setData()\r\n            )\r\n          }\r\n          prefix={<SearchOutlined />}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { loading, nodesFilter, visibleColumns, standByNodes } = this.state;\r\n\r\n    const chartDataConfig = this.state.chartData\r\n      ? {\r\n          datasets: [\r\n            {\r\n              label: \"Value\",\r\n              data: this.state.chartData,\r\n              fill: false,\r\n              backgroundColor: \"rgb(28, 57, 182)\",\r\n              borderColor: \"rgba(28, 57, 187, 0.2)\",\r\n              tension: 0,\r\n            },\r\n          ],\r\n        }\r\n      : {};\r\n\r\n    const maxPositionChartDataConfig =\r\n      this.state.maxData && this.state.positionData\r\n        ? {\r\n            datasets: [\r\n              {\r\n                label: \"Max\",\r\n                data: this.state.maxData,\r\n                backgroundColor: \"blue\",\r\n                pointRadius: 5,\r\n              },\r\n              {\r\n                label: \"Position\",\r\n                data: this.state.positionData,\r\n                backgroundColor: \"orange\",\r\n                pointRadius: 5,\r\n              },\r\n            ],\r\n          }\r\n        : {};\r\n\r\n    const maxStakeOptions = this.state.chartData\r\n      ? {\r\n          scales: {\r\n            xAxes: [\r\n              {\r\n                type: \"linear\",\r\n                position: \"bottom\",\r\n                scaleLabel: {\r\n                  display: true,\r\n                  labelString: \"Block Height\",\r\n                },\r\n                ticks: {\r\n                  autoSkip: true,\r\n                  maxTicksLimit: 10,\r\n                  min: Math.min(...this.state.chartData.map((data) => data.x)),\r\n                  max: Math.max(...this.state.chartData.map((data) => data.x)),\r\n                  stepSize: 20000,\r\n                  callback: function (value) {\r\n                    return value;\r\n                  },\r\n                },\r\n              },\r\n            ],\r\n            yAxes: [\r\n              {\r\n                scaleLabel: {\r\n                  display: true,\r\n                  labelString: \"Max Effective Stake (ᚱ)\",\r\n                },\r\n              },\r\n            ],\r\n          },\r\n        }\r\n      : {};\r\n\r\n    const totalBondOptions = this.state.chartData\r\n      ? {\r\n          scales: {\r\n            xAxes: [\r\n              {\r\n                type: \"linear\",\r\n                position: \"bottom\",\r\n                scaleLabel: {\r\n                  display: true,\r\n                  labelString: \"Block Height\",\r\n                },\r\n                ticks: {\r\n                  autoSkip: true,\r\n                  maxTicksLimit: 10,\r\n                  min: Math.min(...this.state.chartData.map((data) => data.x)),\r\n                  max: Math.max(...this.state.chartData.map((data) => data.x)),\r\n                  stepSize: 20000,\r\n                  callback: function (value) {\r\n                    return value;\r\n                  },\r\n                },\r\n              },\r\n            ],\r\n            yAxes: [\r\n              {\r\n                scaleLabel: {\r\n                  display: true,\r\n                  labelString: \"Total Bond Amount (ᚱ)\",\r\n                },\r\n              },\r\n            ],\r\n          },\r\n        }\r\n      : {};\r\n\r\n    const maxPositionOptions = this.state.chartData\r\n      ? {\r\n          scales: {\r\n            xAxes: [\r\n              {\r\n                type: \"linear\",\r\n                position: \"bottom\",\r\n                scaleLabel: {\r\n                  display: true,\r\n                  labelString: \"Block Height\",\r\n                },\r\n                ticks: {\r\n                  autoSkip: true,\r\n                  maxTicksLimit: 10,\r\n                  min: this.state.minX,\r\n                  max: this.state.maxX,\r\n                  stepSize: 20000,\r\n                  callback: function (value) {\r\n                    return value;\r\n                  },\r\n                },\r\n              },\r\n            ],\r\n            yAxes: [\r\n              {\r\n                scaleLabel: {\r\n                  display: true,\r\n                  labelString: \"Position\",\r\n                },\r\n                ticks: {\r\n                  min: 0,\r\n                  max: 100,\r\n                },\r\n              },\r\n            ],\r\n          },\r\n        }\r\n      : {};\r\n\r\n    const slashesOptions = this.state.chartData\r\n      ? {\r\n          scales: {\r\n            xAxes: [\r\n              {\r\n                type: \"linear\",\r\n                position: \"bottom\",\r\n                scaleLabel: {\r\n                  display: true,\r\n                  labelString: \"Block Height\",\r\n                },\r\n                ticks: {\r\n                  callback: function (value, index, values) {\r\n                    return value;\r\n                  },\r\n                },\r\n              },\r\n            ],\r\n            yAxes: [\r\n              {\r\n                scaleLabel: {\r\n                  display: true,\r\n                  labelString: \"Slashes Value\",\r\n                },\r\n              },\r\n            ],\r\n          },\r\n        }\r\n      : {};\r\n\r\n    const rewardsOptions = this.state.chartData\r\n      ? {\r\n          scales: {\r\n            xAxes: [\r\n              {\r\n                type: \"linear\",\r\n                position: \"bottom\",\r\n                scaleLabel: {\r\n                  display: true,\r\n                  labelString: \"Block Height\",\r\n                },\r\n                ticks: {\r\n                  callback: function (value, index, values) {\r\n                    return value;\r\n                  },\r\n                },\r\n              },\r\n            ],\r\n            yAxes: [\r\n              {\r\n                scaleLabel: {\r\n                  display: true,\r\n                  labelString: \"Reward Amount (ᚱ)\",\r\n                },\r\n              },\r\n            ],\r\n          },\r\n        }\r\n      : {};\r\n\r\n    const bondOptions = this.state.chartData\r\n      ? {\r\n          scales: {\r\n            xAxes: [\r\n              {\r\n                type: \"linear\",\r\n                position: \"bottom\",\r\n                scaleLabel: {\r\n                  display: true,\r\n                  labelString: \"Block Height\",\r\n                },\r\n                ticks: {\r\n                  autoSkip: true,\r\n                  maxTicksLimit: 10,\r\n                  min: Math.min(...this.state.chartData.map((data) => data.x)),\r\n                  stepSize: 20000,\r\n                  callback: function (value, index, values) {\r\n                    return value;\r\n                  },\r\n                },\r\n              },\r\n            ],\r\n            yAxes: [\r\n              {\r\n                scaleLabel: {\r\n                  display: true,\r\n                  labelString: \"Bond Amount (ᚱ)\",\r\n                },\r\n              },\r\n            ],\r\n          },\r\n        }\r\n      : {};\r\n\r\n    return (\r\n      <Layout>\r\n        <Header\r\n          style={{\r\n            color: \"white\",\r\n            fontSize: 25,\r\n            fontWeight: 700,\r\n            minWidth: 1580,\r\n            height: 110,\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <div className=\"header-left\">\r\n            <img\r\n              alt=\"#\"\r\n              src={thornode}\r\n              style={{ width: 55, height: 55, margin: \"auto 22px auto 0\" }}\r\n            />\r\n            <span>Thornode Monitor</span>\r\n          </div>\r\n          <div className=\"header-right\">\r\n            <div\r\n              className={`active-node ${\r\n                nodesFilter.active ? \"active-node--active\" : null\r\n              }`}\r\n              onClick={() => this.onNodesFilter(\"active\")}\r\n            >\r\n              <img src={activeIcon} />\r\n            </div>\r\n            <div\r\n              className={`active-node ${\r\n                nodesFilter.standby ? \"active-node--active\" : null\r\n              }`}\r\n              onClick={() => this.onNodesFilter(\"standby\")}\r\n            >\r\n              <img src={powerIcon} />\r\n            </div>\r\n            <div\r\n              className={`active-node ${\r\n                nodesFilter.orthers ? \"active-node--active\" : null\r\n              }`}\r\n              onClick={() => this.onNodesFilter(\"orthers\")}\r\n            >\r\n              <img src={threeDotsIcon} />\r\n            </div>\r\n          </div>\r\n        </Header>\r\n        <Content style={{ padding: 40, backgroundColor: \"white\" }}>\r\n          {loading && (\r\n            <div className=\"loading\">\r\n              <img src={loadingIcon} className=\"loading_icon\" />\r\n            </div>\r\n          )}\r\n\r\n          {!loading && (\r\n            <div className=\"layout-content-wrapper\">\r\n              <Breadcrumb separator={<RightOutlined />}>\r\n                <Breadcrumb.Item href=\"/\">Dashboard</Breadcrumb.Item>\r\n                <Breadcrumb.Item className=\"current\">\r\n                  Standby Nodes\r\n                </Breadcrumb.Item>\r\n              </Breadcrumb>\r\n\r\n              <div className=\"overview-list-wrapper\">\r\n                <div className=\"overview-list\">\r\n                  <GlobalData\r\n                    state={this.state}\r\n                    globalData={this.state.globalData}\r\n                    animateBlockCount={this.state.animateBlockCount}\r\n                    handleClickTotalBond={this.handleClickTotalBond}\r\n                    chartDataConfig={chartDataConfig}\r\n                    totalBondOptions={totalBondOptions}\r\n                    maxStakeOptions={maxStakeOptions}\r\n                    handlePopoverVisibility={this.handlePopoverVisibility}\r\n                    handleMaxEffectiveStake={this.handleMaxEffectiveStake}\r\n                  />\r\n                  <CoinGeckoData globalData={this.state.globalData} />\r\n                </div>\r\n              </div>\r\n\r\n              <>\r\n                <div className=\"cta-wrapper\">\r\n                  <div className=\"cta-link\">\r\n                    <Button type=\"primary\" className=\"uppercase\">\r\n                      Standby Nodes\r\n                    </Button>\r\n                  </div>\r\n                  {this.searchBar()}\r\n\r\n                  <VisibleColumn\r\n                    initialConfig={visibleColumns}\r\n                    onConfigUpdate={this.onColumnUpdate.bind(this)}\r\n                  />\r\n                </div>\r\n\r\n                {standByNodes.length > 0 && (\r\n                  <NodeTable\r\n                    visibleColumns={visibleColumns}\r\n                    whichHeart={this.whichHeart.bind(this)}\r\n                    addToFav={this.addToFav.bind(this)}\r\n                    nodeData={standByNodes}\r\n                    clickSortHeader={this.clickSortHeader.bind(this)}\r\n                    handleClickBond={this.handleClickBond}\r\n                    handleClickRewards={this.handleClickRewards}\r\n                    handleClickSlashes={this.handleClickSlashes}\r\n                    sortColour={this.sortColour.bind(this)}\r\n                    maxChainHeights={this.state.maxChainHeights}\r\n                    chains={false}\r\n                    sortBy={this.state.sortBy}\r\n                    sortDirection={this.state.sortDirection}\r\n                    chartDataConfig={chartDataConfig}\r\n                    bondOptions={bondOptions}\r\n                    rewardsOptions={rewardsOptions}\r\n                    slashesOptions={slashesOptions}\r\n                    handlePopoverVisibility={this.handlePopoverVisibility}\r\n                    handleNodePosition={this.handleNodePosition}\r\n                    maxPositionChartDataConfig={maxPositionChartDataConfig}\r\n                    maxPositionOptions={maxPositionOptions}\r\n                  />\r\n                )}\r\n                {standByNodes.length === 0 && (\r\n                  <div className=\"no-data\">\r\n                    <div className=\"no-data__content\">\r\n                      No Standby Data Available!\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </>\r\n            </div>\r\n          )}\r\n        </Content>\r\n        <Footer>\r\n          <a\r\n            href=\"https://github.com/liquify-validation\"\r\n            target=\"_blank\"\r\n            className=\"link\"\r\n          >\r\n            <img alt=\"#\" src={githubIcon} className=\"overview-item__icon\" />\r\n          </a>\r\n          <a\r\n            href=\"https://twitter.com/Liquify_ltd\"\r\n            target=\"_blank\"\r\n            className=\"link\"\r\n          >\r\n            <img alt=\"#\" src={twitterIcon} className=\"overview-item__icon\" />\r\n          </a>\r\n          <div className=\"logo-wrapper\">\r\n            <span>Built by:</span>\r\n            <img alt=\"#\" src={liquifyLogo} className=\"overview-item__icon\" />\r\n          </div>\r\n        </Footer>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n"],"names":["leaveIcon","_jsxs","style","marginTop","focusable","preserveAspectRatio","xmlns","fill","width","height","viewBox","className","children","_jsx","d","Header","_Layout","Footer","Content","headerStyle","cursor","padding","fontSize","color","backgroundColor","fontWeight","tdStyle","minWidth","textAlign","trStyle","iconStyle","_defineProperty","paddingLeft","paddingRight","copyToClipWithPopup","_x","_x2","_copyToClipWithPopup","_asyncToGenerator","_regeneratorRuntime","mark","_callee","msg","ip","wrap","_context","prev","next","copyToClipboard","popUpModal","stop","apply","arguments","str","navigator","clipboard","writeText","Promise","reject","Modals","info","title","content","ModalContent","concat","onOk","okText","cancelText","SortIcon","_ref","sortBy","column","sortDirection","src","arrowDownIcon","Icons","_ref2","address","ip_address","addToFav","whichHeart","firstURL","secondURL","marginLeft","Popover","trigger","href","target","rel","verticalAlign","stroke","onClick","alt","GlobalData","_ref3","_globalData$coingecko","_globalData$coingecko2","_globalData$coingecko3","_globalData$coingecko4","_chartDataConfig$data","_chartDataConfig$data2","_chartDataConfig$data3","_chartDataConfig$data4","_globalData$timeUntil","_globalData$timeUntil2","_globalData$timeUntil3","globalData","state","animateBlockCount","handleClickTotalBond","chartData","chartDataConfig","totalBondOptions","handlePopoverVisibility","handleMaxEffectiveStake","maxStakeOptions","timeToDisplay","msgTitle","churnTry","retiring","timeUntilRetry","days","hours","minutes","_globalData$timeUntil4","_globalData$timeUntil5","_globalData$timeUntil6","timeUntilChurn","_Fragment","blockIcon","parseInt","maxHeight","toLocaleString","churnsIcon","bondIcon","activeNodes","length","map","item","bond","reduce","marcketCapIcon","coingecko","market_cap","timeIcon","total_volume","datasets","data","CustomLineChart","options","JSON","stringify","overlayClassName","onVisibleChange","visible","verticalTopIcon","maxEffectiveStake","chartLineIcon","CoinGeckoData","_ref4","_globalData$coingecko5","_globalData$coingecko6","_globalData$coingecko7","_globalData$coingecko8","_globalData$coingecko9","_globalData$coingecko10","_globalData$coingecko11","runeUsdtIcon","current_price","highTradingIcon","high_24h","lowTradingIcon","low_24h","mcapRankIcon","market_cap_rank","totalSupplyIcon","total_supply","ReturnIspImage","_ref5","isp","imageAWS","imageDO","imageGCP","imageAZURE","imageHETZNER","imageVULTR","imageLeaseweb","imageDatacamp","imageComcast","imageChoopa","imageChartercoms","imageATandT","imageZenlayer","imageAljeel","imageHostinger","ChainTD","_ref6","chain","obchains","maxChainHeights","delta","isNaN","toString","BondProviderPopOver","_ref7","totalBond","a","b","index","display","justifyContent","bond_address","substring","toFixed","NodeTable","_ref8","nodeData","clickSortHeader","handleClickBond","handleClickRewards","handleClickSlashes","sortColour","chains","bondOptions","rewardsOptions","slashesOptions","maxPositionOptions","maxPositionChartDataConfig","handleNodePosition","_ref8$visibleColumns","visibleColumns","_objectSpread","defaulColumns","_ref8$sortBy","_ref8$sortDirection","_useState","useState","_useState2","_slicedToArray","currentPage","setCurrentPage","_useState3","_useState4","itemsPerPage","setItemsPerPage","totalPages","Math","ceil","pageNumbers","i","push","handleClick","event","Number","id","renderPageNumbers","number","indexOfLastItem","indexOfFirstItem","currentItems","slice","getHeaderClassName","key","getCellClassName","_Select","defaultValue","showSearch","onChange","value","borderRadius","dropdownMatchSelectWidth","label","borderWidth","borderColor","borderStyle","marginRight","binance","margin","bitcoin","eth","litecoin","bitcoincash","dogecoin","gaia","avax","_maxPositionChartData","_chartDataConfig$data5","_chartDataConfig$data6","_chartDataConfig$data7","_chartDataConfig$data8","_chartDataConfig$data9","_chartDataConfig$data10","maxWidth","node_address","CustomScatterChart","DotChartOutlined","age","action","location","HistoryOutlined","bond_providers","providers","current_award","apy","slash_points","score","version","forced_to_leave","requested_to_leave","rpc","bifrost","prevPage","LeftOutlined","RightOutlined","timer","nodes","rewards","slashes","bfr","_default","_Component","_componentWillMount","_refreshData","_inherits","_super","_createSuper","props","_ref9","_ref14","_ref23","_ref26","_this","_classCallCheck","call","setState","isPopoverOpen","_x3","_callee2","url","response","rawData","maxData","positionData","allXValues","minX","maxX","_context2","fetch","sent","json","Object","keys","entries","_ref10","_ref11","x","y","max","_ref12","_ref13","position","_toConsumableArray","dataPoint","min","t0","console","error","_x4","_callee3","_context3","_ref15","_ref16","_callee4","_context4","_ref18","_ref19","round","_callee5","_context5","_ref21","_ref22","_x5","_callee6","_context6","_ref24","_ref25","_x6","_callee7","_context7","_ref27","_ref28","standByNodes","whitelistedNodes","myFavNodes","searchTerm","nodesFilter","loading","bind","_assertThisInitialized","_createClass","_callee8","tmp","_context8","getCookie","parse","this","refreshData","_callee9","_this2","_context9","abrupt","getData","setData","_this3","setInterval","clearInterval","_this4","singleAddress","setCookie","newFaveNodes","indexOf","newArrayWithRemove","filter","newFaveNodesNew","_this5","includes","bondProvidersString","_this6","newItems","fave","status","standbyNodes","maxVersion","active_standy_nodes","whitelisted","findChurnOuts","findChurnIns","returnSearchedData","activeNodesSorted","sortData","favActiveNodesSorted","standBySorted","whitelistedSorted","config","prevState","over300","over300Sorted","under300","calcBadValidatorRedline","greater100Slashes","validatorLine","accumulator","object","parseFloat","BadValidatorRedline","undefined","direction","worst_perform","toSortBy","newData","sort","localeCompare","aSorted","reverse","_this7","heartFull","heartBlank","_this8","_Input","background","trim","toLowerCase","prefix","SearchOutlined","_this9","_this$state","tension","pointRadius","scales","xAxes","type","scaleLabel","labelString","ticks","autoSkip","maxTicksLimit","stepSize","callback","yAxes","values","alignItems","thornode","active","onNodesFilter","activeIcon","standby","powerIcon","orthers","threeDotsIcon","loadingIcon","_Breadcrumb","separator","Item","_Button","searchBar","VisibleColumn","initialConfig","onConfigUpdate","onColumnUpdate","githubIcon","twitterIcon","liquifyLogo","Component"],"sourceRoot":""}